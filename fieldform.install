<?php
/**
 * Created by PhpStorm.
 * User: alexboyce
 * Date: 1/16/14
 * Time: 2:32 PM
 */

function fieldform_schema() {
  $schema['fieldform'] = array(
    'fields' => array(
      'fid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE
      ),
      'label' => array(
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE
      ),
      'created' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE
      ),
      'changed' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE
      ),
      'module' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0x01,
        'size' => 'tiny'
      ),
      'settings' => array(
        'type' => 'text',
        'not null' => FALSE,
        'serialize' => TRUE,
      )
    ),
    'primary key' => array('fid'),
    'unique keys' => array(
      'name' => array('name'),
    )
  );

  $schema['fieldform_elements'] = array(
    'fields' => array(
      'eid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE
      ),
      'fid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE
      ),
      'pid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0
      ),
      'id' => array(
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 100,
        'not null' => TRUE
      ),
      'elementType' => array(
        'type' => 'varchar',
        'length' => 100,
        'not null' => TRUE
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE
      ),
      'title_display' => array(
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
        'default' => 'before'
      ),
      'type' => array(
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE
      ),
      'default_value' => array(
        'type' => 'text',
        'size' => 'medium',
        'serialize' => TRUE,
        'not null' => FALSE
      ),
      'description' => array(
        'type' => 'text',
        'not null' => FALSE
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0
      ),
      'attributes' => array(
        'type' => 'text',
        'size' => 'medium',
        'serialize' => TRUE,
        'not null' => FALSE
      ),
      'extra' => array(
        'type' => 'text',
        'size' => 'medium',
        'serialize' => TRUE,
        'not null' => FALSE
      )
    ),
    'foreign keys' => array(
      'fid' => array(
        'table' => 'fieldform',
        'columns' => array('fid' => 'fid')
      )
    ),
    'primary key' => array('eid')
  );

  $schema['fieldform_result'] = array(
    'fields' => array(
      'rid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE
      ),
      'form_name' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE
      ),
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE
      ),
      'hostname' => array(
        'type' => 'varchar',
        'length' => 15,
        'not null' => FALSE,
      ),
      'created' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE
      ),
      'changed' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE
      ),
      'module' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      )
    ),
    'foreign keys' => array(
      'form_name' => array(
        'table' => 'fieldform',
        'columns' => array('form_name' => 'name')
      ),
      'uid' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid')
      )
    ),
    'primary key' => array('rid')
  );

  $schema['fieldform_result_value'] = array(
    'fields' => array(
      'rvid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE
      ),
      'rid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 100,
        'not null' => TRUE
      ),
      'type' => array(
        'type' => 'varchar',
        'length' => 100,
        'not null' => TRUE
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE
      ),
      'value' => array(
        'type' => 'text',
        'not null' => FALSE,
        'serialize' => TRUE,
        'size' => 'medium'
      )
    ),
    'foreign keys' => array(
      'rid' => array(
        'table' => 'fieldform_result',
        'columns' => array('rid' => 'rid')
      )
    ),
    'primary key' => array('rvid')
  );

  $schema['fieldform_entities'] = array(
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE
      ),
      'entity_type' => array(
        'type' => 'varchar',
        'length' => 100,
        'not null' => TRUE
      ),
      'entity' => array(
        'type' => 'varchar',
        'length' => 100,
        'not null' => TRUE
      ),
      'bundle' => array(
        'type' => 'varchar',
        'length' => 100,
        'not null' => FALSE
      ),
      'result' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE
      )
    ),
    'primary key' => array('id'),
    'foreign keys' => array(
      'result' => array(
        'table' => 'fieldform_result',
        'columns' => array('result' => 'rid')
      )
    )
  );

  return $schema;
}

function fieldform_update_7200(&$sandbox) {
  $schema = fieldform_schema();
  if (!db_table_exists('fieldform_elements')) {
    db_create_table('fieldform_elements', $schema['fieldform_elements']);
  }
  if (!db_table_exists('fieldform_result_value')) {
    db_create_table(
      'fieldform_result_value',
      $schema['fieldform_result_value']
    );
  }
  return t('Created new element and value tables');
}

function fieldform_update_7201(&$sandbox) {
  if (db_field_exists('fieldform_result', 'data')) {
    if (!isset($sandbox['progress'])) {
      $sandbox['progress'] = 0;
      $sandbox['current_rid'] = 0;
      $sandbox['max'] = db_query('SELECT COUNT(DISTINCT rid) FROM {fieldform_result}')->fetchField();
    }

    $results = db_select('fieldform_result', 'r',
      array('fetch' => PDO::FETCH_ASSOC))
      ->fields('r', array('rid', 'data'))
      ->condition('rid', $sandbox['current_rid'], '>')
      ->range(0, 1)->orderBy('rid', 'ASC')->execute();

    while($result = $results->fetchAssoc()) {
      $data = is_array($result['data'])
        ? $result['data']
        : unserialize($result['data']);

      foreach ($data as $datum) {
        $save = array(
          'rid' => $result['rid'],
          'name' => $datum['name'],
          'type' => $datum['type'],
          'title' => $datum['title'],
          'value' => $datum['value']
        );
        if (drupal_write_record('fieldform_result_value', $save) === FALSE) {
          throw new DrupalUpdateException();
        }
      }

      $sandbox['progress']++;
      $sandbox['current_rid'] = $result['rid'];
    }

    $sandbox['#finished'] = empty($sandbox['max']) ? 1 : ($sandbox['progress'] / $sandbox['max']);

    if ($sandbox['#finished']) {
      db_drop_field('fieldform_result', 'data');
      return t('Migrating result data from bulk serialization to row data is complete');
    }
  }
  else {
    return t('No need to update result data');
  }
}

function fieldform_update_7202(&$sandbox) {
  if (db_field_exists('fieldform', 'elements')) {
    if (!isset($sandbox['progress'])) {
      $sandbox['progress'] = 0;
      $sandbox['current_fid'] = 0;
      $sandbox['max'] = db_query('SELECT COUNT(DISTINCT fid) FROM {fieldform}')
          ->fetchField();
    }

    $forms = db_select('fieldform', 'f', array('fetch' => PDO::FETCH_ASSOC))
      ->fields('f', array('fid', 'elements'))
      ->condition('fid', $sandbox['current_fid'], '>')->range(0, 1)
      ->orderBy('fid', 'ASC')->execute();

    $schema = drupal_get_schema('fieldform_elements');
    unset($schema['fields']['eid']);
    $fields = array_keys($schema['fields']);

    while($form = $forms->fetchAssoc()) {

      $elements = is_array($form['elements'])
        ? $form['elements']
        : unserialize($form['elements']);

      _fieldform_process_element_7202($elements, $fields, $form['fid']);

      $sandbox['progress']++;
      $sandbox['current_fid'] = $form['fid'];
    }

    $sandbox['#finished'] = empty($sandbox['max']) ? 1 : ($sandbox['progress'] / $sandbox['max']);

    if ($sandbox['#finished']) {
      db_drop_field('fieldform', 'elements');
      return t('Succesfully mapped form elements to independent row data');
    }
  }
  else {
    return t('No update needed');
  }
}

function _fieldform_process_element_7202($elements, $fields, $fid, $pid = 0) {

  foreach ($elements as $element) {

    $save = array('extra' => array());
    $children = $element->children;
    $id = $element->_id;

    $keys = get_object_vars($element);
    foreach ($keys as $key => $value) {
      if (in_array($key, $fields)) {
        $save[$key] = $value;
      }
      else {
        $save['extra'][$key] = $value;
      }
    }

    $save += array(
      'fid' => $fid,
      'pid' => $pid,
      'id' => $id,
      'elementType' => $element->elementType()
    );

    $save = (object)$save;
    if (drupal_write_record('fieldform_elements', $save) === FALSE) {
      throw new DrupalUpdateException();
    }

    if (!empty($children)) {
      _fieldform_process_element_7202($children, $fields, $fid, $save->eid);
    }
  }
}

function fieldform_field_schema($field) {
  $ret = array();
  if ($field['type'] === 'fieldform') {
    $ret = array(
      'columns' => array(
        'fieldform_form' => array(
          'type' => 'varchar',
          'length' => 64,
          'not null' => FALSE
        )
      ),
      'indexes' => array(
        'fieldform_form' => array('fieldform_form'),
      ),
      'foreign keys' => array(
        'fieldform_form' => array(
          'table' => 'fieldform',
          'columns' => array('fieldform_form' => 'name')
        )
      )
    );
  }
  return $ret;
}